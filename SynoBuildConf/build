#!/bin/bash -e

# Radicale for Synology DSM
#
# Copyright (C) 2017 Thomas Himmelstoss
#
# This software may be freely distributed under the MIT license. You should
# have received a copy of the MIT License along with this program.

source "${PWD}/build_vars.sh"

VIRTUAL_ENV_URL="https://pypi.python.org/packages/source/v/virtualenv"

# The PWD variable begins with a double slash (e. g. //source/...). This
# causes pip to fail. So we remove it by using readlink
PWD=$(readlink -m ${PWD})

# Set some often needed environment variables.
VIRTUAL_ENV_PKG="virtualenv-${VIRTUAL_ENV_VERSION}.tar.gz"
BUILD_DIR="${PWD}/build"
SRC_DIR="${PWD}/src"
PYTHON="$(which python3)"
BUILD_ENV="${PWD}/build-env"
PIP="${BUILD_ENV}/bin/pip"

echo "---------------------------------------------------------------"
echo "Clear the build directory"
echo "---------------------------------------------------------------"

rm -vrf "${BUILD_DIR}" && mkdir -vp "${BUILD_DIR}/wheels"

echo "---------------------------------------------------------------"
echo "Download virtualenv tarball"
echo "---------------------------------------------------------------"

echo "Version of virtualenv is: ${VIRTUAL_ENV_VERSION}"

wget --no-check-certificate "--directory-prefix=${PWD}" "${VIRTUAL_ENV_URL}/${VIRTUAL_ENV_PKG}"

echo "---------------------------------------------------------------"
echo "Check virtualenv tarball hash"
echo "---------------------------------------------------------------"

DOWNLOAD_SHA256="$(sha256sum "${PWD}/${VIRTUAL_ENV_PKG}" | awk '{print $1}')"

if [ "${VIRTUAL_ENV_SHA256}" != "${DOWNLOAD_SHA256}" ]; then
    echo "Hash of download doesn't match expected value"
    exit 1
else
    echo "Download successful, hashes match!"
fi

echo "---------------------------------------------------------------"
echo "Extract virtualenv tarball"
echo "---------------------------------------------------------------"

tar -xvzf "${PWD}/${VIRTUAL_ENV_PKG}"
mv "${PWD}/virtualenv-${VIRTUAL_ENV_VERSION}" "${BUILD_DIR}/virtualenv"

echo "---------------------------------------------------------------"
echo "Create new python virtual environment"
echo "---------------------------------------------------------------"

${PYTHON} "${BUILD_DIR}/virtualenv/virtualenv.py" "${BUILD_ENV}"

echo "---------------------------------------------------------------"
echo "Create Radicale wheel distributions"
echo "---------------------------------------------------------------"

"${PIP}" wheel --wheel-dir "${BUILD_DIR}/wheels" "radicale==${RADICALE_VERSION}"

echo "---------------------------------------------------------------"
echo "Build PAM helper program"
echo "---------------------------------------------------------------"

mkdir -p "${BUILD_DIR}/bin"
"${CC}" -v -std=c99 -o "${BUILD_DIR}/bin/pam_auth" -lpam -lpam_misc "${SRC_DIR}/pam_auth.c"

echo "---------------------------------------------------------------"
echo "Building Radicale authentication plugin"
echo "---------------------------------------------------------------"

RADICALE_VERSION="${RADICALE_VERSION}" "${PIP}" wheel --wheel-dir "${BUILD_DIR}/wheels" "${SRC_DIR}"

echo "---------------------------------------------------------------"
echo "Copy configuration files to the build directory"
echo "---------------------------------------------------------------"

cp -av "${PWD}/logging.conf" "${BUILD_DIR}"
cp -av "${PWD}/etc" "${BUILD_DIR}/etc"

